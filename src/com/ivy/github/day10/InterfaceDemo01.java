package com.ivy.github.day10;

//什么是接口:
//硬件接口:指的是两个硬件设备之间的连接方式。硬件接口既包括物理上的接口，还包括逻辑上的数据传送协议。
//软件接口:程序代码,特殊的类,表示一种规范,是具有的N个方法的特征集合.
//---------------------------------------------
// 在封装时,显示器封装了很多歌电子元件等,最终向外暴露数据交互的孔--->接口.
//    目的:设备和设备之间通信桥梁.
//在Java中,接口表示一种规范/约束/要求实现者必须遵循该规范:用来约束使用者应该怎么做.
//----------------------------------------------------------------------------------
//为什么要遵循规范?如果不遵循规范会出现什么问题.
//   遥想山寨机横行那些年,A品牌,B品牌,C品牌......
//   带来问题,不同品牌的手机之间,充电的接口是不相同的,不爽.
//----------------------------------------------------------------------------------
//    当统一接口.统一规范之后:
//       大多数Android手机的充电的接口是相同( Micro-USB/type-c/lightning).
//
//生活中，咱们说的USB接口其实并不是我们所看到的那些插槽，而是那些插槽所遵循的一种规范（标准）。
//      USB是一种协议(规范):应该规范所有的USB设备具有某些功能:.
//           每秒必须传输多少M数据.
//           支持热插拔
//            ........
//我们所看到的那些插槽是根据USB规范设计出来的产品，也就说插槽是USB规范的实例。对于不同型号的USB设备而言，他们各自的USB插槽都需要遵循同一个规范，如此可以保证任何插入插槽的设备都能与主板正常通信。对于同一种型号的主板上的多个USB插槽，他们有相同的数据交换方式，相同的实现细节，可认为他们都是同一个类的不同实例。
//--------------------------------------------------------------------------------
//接口只定义了类应当遵循的规范，却不关心这些类的内部数据和其功能的实现细节。站在程序角度上说接口只规定了类里必须提供的方法，从而分离了规范和实现，增强了系统的可拓展性和可维护性。
//规范和实现相分离的好处：主板上提供了USB插槽，只要一个遵循了USB规范的鼠标，就可以插入USB插槽，并与主板正常通信。至于这个鼠标是谁生产的，内部是如何实现的，主板都不需要关心(只要遵循了USB规范就可以插在主板上使用)。当鼠标坏了的时候，我们会不会把主板换了？

public class InterfaceDemo01 {

	public static void main(String[] args) {
		//		Demo1 demo1 = new Demo1();//接口中没有构造器,推论:接口不能创建对象(不能 new ),接口中不能定义普通方法.
	}

}

interface Demo1 {

	//	Demo1(){//接口中没有构造器,推论:接口不能创建对象(不能 new )
	//		
	//	}

	int a = 1;//:接口中定义的成员变量,实质是全局静态常量,默认使用  public static final来修饰，因为有final修饰，所以一定要赋值

	void doWork();//接口中定义的方法都是公共的抽象方法,默认的使用  public abstract 来修饰方法.

	interface Demo2 {//接口中定义的内部类都是公共的静态内部类,默认使用public  static来修饰内部类.

	}

	//	public int getTotal() { //error,接口中不能定义普通方法
	//		
	//	}
}

//接口的特点：
//①　没有构造方法，也不能显示定义构造器，不能实例化。
//②　接口只能继承接口，不能继承类，且接口支持多继承(类是单继承关系)。
//          [修饰符] interface  接口名   extends   接口1,接口2
//③　接口里的方法方法全是抽象的，默认修饰符是public abstract。
//④　接口里的字段全是全局静态常量，默认修饰符是public static final。
//⑤　接口里的内部类全是公共静态的，默认修饰符是public static。



